// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecordStore.Infrastructure.Data;

#nullable disable

namespace RecordStore.Infrastructure.Migrations
{
    [DbContext(typeof(RecordStoreDbContext))]
    partial class RecordStoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RecordStore.Core.Models.Album", b =>
                {
                    b.Property<Guid>("AlbumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<string>("CatalogNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("DurationMinutes")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("TrackCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("AlbumId");

                    b.HasIndex("ArtistId");

                    b.HasIndex("CatalogNumber")
                        .IsUnique()
                        .HasFilter("[CatalogNumber] IS NOT NULL");

                    b.HasIndex("GenreId");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            AlbumId = new Guid("11111111-1111-1111-1111-111111111111"),
                            ArtistId = 1,
                            CatalogNumber = "PCS7088",
                            CreatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "The eleventh studio album by The Beatles",
                            DurationMinutes = 47,
                            GenreId = 1,
                            Id = 0,
                            Price = 24.99m,
                            ReleaseDate = new DateTime(1969, 9, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Stock = 50,
                            Title = "Abbey Road",
                            TrackCount = 17,
                            UpdatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            AlbumId = new Guid("22222222-2222-2222-2222-222222222222"),
                            ArtistId = 2,
                            CatalogNumber = "SHVL804",
                            CreatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "The eighth studio album by Pink Floyd",
                            DurationMinutes = 43,
                            GenreId = 1,
                            Id = 0,
                            Price = 29.99m,
                            ReleaseDate = new DateTime(1973, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Stock = 30,
                            Title = "The Dark Side of the Moon",
                            TrackCount = 9,
                            UpdatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            AlbumId = new Guid("33333333-3333-3333-3333-333333333333"),
                            ArtistId = 3,
                            CatalogNumber = "CL1355",
                            CreatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Studio album by Miles Davis",
                            DurationMinutes = 46,
                            GenreId = 3,
                            Id = 0,
                            Price = 19.99m,
                            ReleaseDate = new DateTime(1959, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Stock = 25,
                            Title = "Kind of Blue",
                            TrackCount = 5,
                            UpdatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            AlbumId = new Guid("44444444-4444-4444-4444-444444444444"),
                            ArtistId = 4,
                            CatalogNumber = "88883716861",
                            CreatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Fourth studio album by Daft Punk",
                            DurationMinutes = 74,
                            GenreId = 4,
                            Id = 0,
                            Price = 27.99m,
                            ReleaseDate = new DateTime(2013, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Stock = 40,
                            Title = "Random Access Memories",
                            TrackCount = 13,
                            UpdatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            AlbumId = new Guid("55555555-5555-5555-5555-555555555555"),
                            ArtistId = 5,
                            CatalogNumber = "OP125",
                            CreatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Beethoven's final complete symphony",
                            DurationMinutes = 65,
                            GenreId = 5,
                            Id = 0,
                            Price = 15.99m,
                            ReleaseDate = new DateTime(1824, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Stock = 20,
                            Title = "Symphony No. 9",
                            TrackCount = 4,
                            UpdatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("RecordStore.Core.Models.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Biography")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FormedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Biography = "English rock band formed in Liverpool in 1960",
                            Country = "United Kingdom",
                            CreatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            FormedDate = new DateTime(1960, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "The Beatles",
                            UpdatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            Biography = "English rock band formed in London in 1965",
                            Country = "United Kingdom",
                            CreatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            FormedDate = new DateTime(1965, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Pink Floyd",
                            UpdatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            Biography = "American jazz trumpeter, bandleader, and composer",
                            Country = "United States",
                            CreatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            FormedDate = new DateTime(1944, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Miles Davis",
                            UpdatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            Biography = "French electronic music duo",
                            Country = "France",
                            CreatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            FormedDate = new DateTime(1993, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Name = "Daft Punk",
                            UpdatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 5,
                            Biography = "German composer and pianist",
                            Country = "Germany",
                            CreatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            FormedDate = new DateTime(1770, 12, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Name = "Ludwig van Beethoven",
                            UpdatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("RecordStore.Core.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Rock music genre",
                            Name = "Rock",
                            UpdatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Pop music genre",
                            Name = "Pop",
                            UpdatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Jazz music genre",
                            Name = "Jazz",
                            UpdatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Electronic music genre",
                            Name = "Electronic",
                            UpdatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Classical music genre",
                            Name = "Classical",
                            UpdatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("RecordStore.Core.Models.Album", b =>
                {
                    b.HasOne("RecordStore.Core.Models.Artist", "Artist")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RecordStore.Core.Models.Genre", "Genre")
                        .WithMany("Albums")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("RecordStore.Core.Models.Artist", b =>
                {
                    b.Navigation("Albums");
                });

            modelBuilder.Entity("RecordStore.Core.Models.Genre", b =>
                {
                    b.Navigation("Albums");
                });
#pragma warning restore 612, 618
        }
    }
}
